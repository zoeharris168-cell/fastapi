name: Build and Deploy Code
on: [push, pull_request]
jobs:
    build:
        environment: testing
        env:
          DATABASE_HOSTNAME: ${{ secrets.DATABASE_HOSTNAME }}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          ALGORITHM: ${{ secrets.ALGORITHM }}
          ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}
        services:
          postgres:
            image: postgres
            env:
              POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
              POSTGRES_DB: ${{ secrets.DATABASE_NAME }}_test
            ports:
              - 5432:5432
            options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5
        runs-on: ubuntu-latest
        steps:
            - name: pulling git repo
              uses: actions/checkout@v2
            - name: installing python version 3.12
              uses: actions/setup-python@v2
              with:
                python-version: '3.12'
            - name: updating pip
              run: python -m pip install --upgrade pip
            - name: installing all dependencies
              run: pip install -r requirements.txt
            - name: testing with pytest
              run: |
                pip install pytest
                pytest
            # - name: logging in to docker hub
            #   uses: docker/login-action@v1
            #   with:
            #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
            #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
            # - name: setting up docker buildx
            #   id: buildx
            #   uses: docker/setup-buildx-action@v1
            # - name: build and push
            #   id: docker_build
            #   uses: docker/build-push-action@v2
            #   with:
            #     context: ./
            #     file: ./Dockerfile
            #     builder: ${{ steps.buildx.outputs.name }}
            #     push: true
            #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest
            #     cache-from: type=local,src=/tmp/.buildx-cache
            #     cache-to: type=local,dest=/tmp/.buildx-cache
            # - name: Image digest
            #   run: echo ${{ steps.docker_build.outputs.digest }}
    deploy:
        runs-on: ubuntu-latest
        needs: [build]
        steps: 
          - name: deploying stuff
            run: echo 'going to deploy some stuff'